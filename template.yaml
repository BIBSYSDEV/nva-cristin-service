AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Template creates lambda, api-gateway and custom domain mapping for fetching project data


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 40
    MemorySize: 1798
    Runtime: java11
    Architectures:
      - arm64
    Environment:
      Variables:
        ALLOWED_ORIGIN: '*'
        CRISTIN_API_URL: !Ref CristinApiUrl
        DOMAIN_NAME: !Ref ApiDomain
        BASE_PATH: !Ref CustomDomainBasePath
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowMethods: "'OPTIONS, GET'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token, Access-Control-Allow-Origin'"

Parameters:
  CognitoAuthorizerArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Description: Reference to Cognito UserPool for the stage
    Default: CognitoAuthorizerArn
  ApiDomain:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /NVA/ApiDomain
    Description: Domain-name for the backend
  CustomDomainBasePath:
    Type: String
    Description: Base path mapping in CustomDomain
    Default: 'cristin'
  CristinApiUrl:
    Type: String
    Description: Url for Cristin API
    Default: https://api.cristin-test.uio.no/v2
    AllowedValues:
      - https://api.cristin-test.uio.no/v2
      - https://api.cristin.no/v2
Resources:

  ApiAccessLogGroup:
    Type: AWS::Logs::LogGroup

  NvaCristinProxyApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionBody:
        'Fn::Transform':
          Name: AWS::Include
          Parameters:
            Location: ./docs/cristin-proxy-swagger.yaml
      AccessLogSetting:
        DestinationArn: !GetAtt ApiAccessLogGroup.Arn
        Format: '{ "apiId": "$context.apiId", "requestId": "$context.requestId", "requestTime": "$context.requestTime", "requestTimeEpoch": "$context.requestTimeEpoch", "httpMethod": "$context.httpMethod", "path": "$context.path", "status": "$context.status",  "error.message": "$context.error.message" }'
      StageName: Prod
      Auth:
        DefaultAuthorizer: NONE
      EndpointConfiguration: Regional

  NvaCristinProxyInternalApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionBody:
        'Fn::Transform':
          Name: AWS::Include
          Parameters:
            Location: ./docs/cristin-proxy-internal-apidoc.yaml
      AccessLogSetting:
        DestinationArn: !GetAtt ApiAccessLogGroup.Arn
        Format: '{ "apiId": "$context.apiId", "requestId": "$context.requestId", "requestTime": "$context.requestTime", "requestTimeEpoch": "$context.requestTimeEpoch", "httpMethod": "$context.httpMethod", "path": "$context.path", "status": "$context.status",  "error.message": "$context.error.message" }'
      StageName: Prod

      EndpointConfiguration: Regional


  ReadCristinAuthenticationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ['sts:AssumeRole']
      Policies:
        - PolicyName: writeLog
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*'
        - PolicyName: readSecret
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:CristinClientBasicAuth*'


  NvaCristinProjectsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: cristin-project
      Handler: no.unit.nva.cristin.projects.FetchCristinProjects::handleRequest
      Events:
        NvaCristinProjectsEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /project/
            Method: get
            RequestParameters:
              - method.request.querystring.query
              - method.request.querystring.page
              - method.request.querystring.results

  NvaCristinCreateProjectsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: cristin-project
      Handler: no.unit.nva.cristin.projects.CreateCristinProjectHandler::handleRequest
      Role: !GetAtt ReadCristinAuthenticationRole.Arn
      Events:
        NvaCristinProjectsEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /project/
            Method: post

  NvaCristinOneProjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cristin-project
      Handler: no.unit.nva.cristin.projects.FetchOneCristinProject::handleRequest
      Role: !GetAtt ReadCristinAuthenticationRole.Arn
      Events:
        NvaCristinOneProjectEvent:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /project/{id}
            Method: get

  NvaCristinQueryOrganizationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cristin-organization
      Handler: no.unit.nva.cristin.organization.QueryCristinOrganizationHandler::handleRequest
      Events:
        NvaCristinOrganizationsEvent:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /organization/
            Method: get
            RequestParameters:
              - method.request.querystring.query
              - method.request.querystring.page
              - method.request.querystring.results

  NvaCristinFetchOrganization:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cristin-organization
      Handler: no.unit.nva.cristin.organization.FetchCristinOrganizationHandler::handleRequest
      AutoPublishAlias: live
      DeploymentPreference:
        Enabled: true
        Type: AllAtOnce
      Events:
        NvaCristinOneProjectEvent:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /organization/{id}
            Method: get

  NvaCristinFetchOrganizationTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 1
      ResourceId: !Sub function:${NvaCristinFetchOrganization}:live
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency
      ScalableDimension: lambda:function:ProvisionedConcurrency
      ServiceNamespace: lambda
    DependsOn: NvaCristinFetchOrganizationAliaslive

  NvaCristinFetchOrganizationScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: NvaCristinFetchOrganizationScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref NvaCristinFetchOrganizationTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 0.70
        PredefinedMetricSpecification:
          PredefinedMetricType: LambdaProvisionedConcurrencyUtilization

  NvaCristinQueryPersonFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cristin-person
      Handler: no.unit.nva.cristin.person.handler.QueryCristinPersonHandler::handleRequest
      Events:
        NvaCristinQueryPersonEvent:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /person/
            Method: get
            RequestParameters:
              - method.request.querystring.query
              - method.request.querystring.page
              - method.request.querystring.results

  NvaCristinFetchPersonFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cristin-person
      Handler: no.unit.nva.cristin.person.handler.FetchCristinPersonHandler::handleRequest
      Role: !GetAtt ReadCristinAuthenticationRole.Arn
      Events:
        NvaCristinFetchPersonEvent:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /person/{id}
            Method: get

  NvaCristinFetchPersonUsingNin:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cristin-person
      Handler: no.unit.nva.cristin.person.handler.FetchFromIdentityNumberHandler::handleRequest
      Role: !GetAtt ReadCristinAuthenticationRole.Arn
      AutoPublishAlias: live
      DeploymentPreference:
        Enabled: true
        Type: AllAtOnce
      Events:
        NvaCristinFetchPersonUsingNinEvent:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /person/identityNumber/
            Method: post
        NvaCristinFetchPersonUsingInternalRequest:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyInternalApi
            Path: /person/identityNumber/
            Method: post

  NvaCristinFetchPersonUsingNinTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 1
      ResourceId: !Sub function:${NvaCristinFetchPersonUsingNin}:live
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency
      ScalableDimension: lambda:function:ProvisionedConcurrency
      ServiceNamespace: lambda
    DependsOn: NvaCristinFetchPersonUsingNinAliaslive

  NvaCristinFetchPersonUsingNinScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: NvaCristinFetchPersonUsingNinScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref NvaCristinFetchPersonUsingNinTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 0.90
        PredefinedMetricSpecification:
          PredefinedMetricType: LambdaProvisionedConcurrencyUtilization


  NvaCristinCreatePersonFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cristin-person
      Handler: no.unit.nva.cristin.person.create.CreateCristinPersonHandler::handleRequest
      Role: !GetAtt ReadCristinAuthenticationRole.Arn
      Events:
        NvaCristinCreatePersonEvent:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /person/
            Method: post

  NvaCristinUpdatePersonFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cristin-person
      Handler: no.unit.nva.cristin.person.update.UpdateCristinPersonHandler::handleRequest
      #Role: !GetAtt ReadCristinAuthenticationRole.Arn
      Events:
        NvaCristinUpdatePersonEvent:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /person/{id}/
            Method: patch

  NvaCristinFetchPersonInstitutionInfoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cristin-person
      Handler: no.unit.nva.cristin.person.institution.fetch.FetchPersonInstitutionInfoHandler::handleRequest
      Role: !GetAtt ReadCristinAuthenticationRole.Arn
      Events:
        NvaCristinFetchPersonEvent:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /person/{id}/organization/{orgId}/
            Method: get
        NvaCristinFetchPersonUsingInternalRequest:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyInternalApi
            Path: /person/{id}/organization/{orgId}/
            Method: get

  NvaCristinUpdatePersonInstitutionInfoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cristin-person
      Handler: no.unit.nva.cristin.person.institution.update.UpdatePersonInstitutionInfoHandler::handleRequest
      Role: !GetAtt ReadCristinAuthenticationRole.Arn
      Events:
        NvaCristinUpdatePersonInstitutionInfoEvent:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /person/{id}/organization/{orgId}/
            Method: patch

  NvaCristinFetchPositionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cristin-person
      Handler: no.unit.nva.cristin.person.affiliations.handler.PositionCodesHandler::handleRequest
      Events:
        NvaCristinFetchPositionsEvent:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /position/
            Method: get

  NvaCristinQueryPersonEmploymentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cristin-person
      Handler: no.unit.nva.cristin.person.employment.query.QueryPersonEmploymentHandler::handleRequest


      Role: !GetAtt ReadCristinAuthenticationRole.Arn
      Events:
        NvaCristinQueryPersonEmploymentEvent:
          Type: Api
          Properties:
            RestApiId: !Ref NvaCristinProxyApi
            Path: /person/{id}/employment/
            Method: get

  NvaCristinProxyBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: !Ref CustomDomainBasePath
      DomainName: !Ref ApiDomain
      RestApiId: !Ref NvaCristinProxyApi
      Stage: !Ref NvaCristinProxyApi.Stage

  InternalBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: !Sub '${CustomDomainBasePath}-internal'
      DomainName: !Ref ApiDomain
      RestApiId:  !Ref NvaCristinProxyInternalApi
      Stage: !Ref NvaCristinProxyInternalApi.Stage



