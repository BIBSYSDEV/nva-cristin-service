openapi: 3.0.3
info:
  title: NVA Cristin Proxy API
  description: >
    The NVA Cristin Proxy API.

      This API provides transformed Cristin data stored in [Cristin](https://api.cristin.no/v2).

      The data is reformatted as JSON-LD with a schema defined in the [search ontology](https://bibsysdev.github.io/src/search-ontology.ttl), the [Organization ontology](https://bibsysdev.github.io/src/organization-ontology.ttl) and the [project ontology](https://bibsysdev.github.io/src/publication-channel-ontology.ttl).

      To understand the semantic layer, take a look at the @context URI returned by the API, the data is marked up according to this and may be interpreted directly to RDF using this.
  termsOfService: https://nva.unit.no/terms/
  contact:
    email: nva@unit.no
  license:
    name: MIT/NLOD 2.0
    url: https://link.to.license
  version: 1.0.0
externalDocs:
  description: Find out more about NVA
  url: https://nva.unit.no
servers:
  - url: https://api.nva.unit.no/cristin
  - url: https://api.dev.nva.aws.unit.no/cristin
  - url: https://api.sandbox.nva.aws.unit.no/cristin
  - url: https://api.test.nva.aws.unit.no/cristin
paths:
  /project:
    get:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinProjectsFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Project
      summary: List projects matching query
      description: Returns a list of projects based on query parameters
      operationId: ListProjects
      parameters:
        - name: query
          in: query
          description: Search string. Either title search or grant id search
          required: true
          schema:
            type: string
            pattern: '.+'
          example: 'Helse'
        - name: organization
          in: query
          description: Search projects by organization id.
          required: false
          schema:
            type: string
            pattern: '.+'
          example: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0'
        - name: status
          in: query
          description: Search for project with status
          required: false
          schema:
            type: string
            enum:
            - ACTIVE
            - CONCLUDED
            - NOTSTARTED
            example: 'active'
        - name: language
          in: query
          description: Preferred language for some fields
          required: false
          schema:
            $ref: '#/components/schemas/LanguageParam'
          example: 'nb'
        - name: page
          in: query
          description: Current page requested
          required: false
          schema:
            type: number
            default: '1'
          example: '3'
        - name: results
          in: query
          description: Results per page
          required: false
          schema:
            type: number
            default: '5'
          example: '10'
        - name: institution
          in: query
          description: Cristin id, acronym, name, or part of the name of the coordinating institution
          required: false
          schema:
            type: string
        - name: project_manager
          in: query
          description: Cristin id, name or part of the name of the project manager.
          required: false
          schema:
            type: string
        - name: participant
          in: query
          description: Cristin id, name or part of the name of a participant of the project. 'participant' can be used more than once.
          required: false
          schema:
            type: string
        - name: keyword
          in: query
          description: Keyword search. '?keyword=wind energy' makes a search for projects with keywords equal to or a substring of 'wind energy'. keyword can be used more than once
          required: false
          schema:
            type: string
        - name: approval_reference_id
          in: query
          description: Reference id of a project approval.
          required: false
          schema:
            type: string
        - name: funding_source
          in: query
          description: Funding source code.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sorts on 'start_date' and/or 'end_date'. See Search and sort. Default sort order is on 'cristin_project_id' in ascending order.
          required: false
          schema:
            type: string
            enum:
              - start_date
              - end_date
        - name: unit
          in: query
          description: Unit id
          required: false
          schema:
            type: string
        - name: user
          in: query
          description: A person's username in Cristin together with the institution id separated by ':'
          required: false
          schema:
            type: string
        - name: approved_by
          in: query
          description: Code for the authority that evaluated a project approval.
          required: false
          schema:
            type: string
        - name: funding
          in: query
          description: Funding source code e.g. NFR, and project_code together separated by ':'
          required: false
          schema:
            type: string
        - name: levels
          in: query
          description: How many levels down from 'parent_unit_id' will be included in the search.'levels=1' will return projects registered to 'parent_unit_id'. 'levels' can also be used by itself to search for all projects registered to a known cristin unit down to the given level.
          required: false
          schema:
            type: string
        - name: modified_since
          in: query
          description: Only projects that have been modified since this date will be returned. Format YYYY-MM-DD
          required: false
          schema:
            type: string
        - name: biobank
          in: query
          description: Biobank id. 'biobank' can be used more than once.
          required: false
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
              examples:
                objectExample:
                  $ref: '#/components/examples/ProjectsExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Projects'
              examples:
                objectExample:
                  $ref: '#/components/examples/ProjectsExample'
        400:
          $ref: '#/components/responses/400'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
    post:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinCreateProjectsFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Project
      summary: Create and persist project
      description: Create and persist project in Cristin
      operationId: CreateProject
      security:
        - CognitoUserPool: ['https://api.nva.unit.no/scopes/backend', 'https://api.nva.unit.no/scopes/frontend','aws.cognito.signin.user.admin']
      requestBody:
        description: Payload containing valid project data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPost'
            examples:
              objectExample:
                $ref: '#/components/examples/ProjectPostExample'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ProjectPost'
            examples:
              objectExample:
                $ref: '#/components/examples/ProjectPostExample'

      responses:
        201:
          description: Successful creation of project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
              examples:
                objectExample:
                  $ref: '#/components/examples/ProjectsExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Projects'
              examples:
                objectExample:
                  $ref: '#/components/examples/ProjectsExample'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
  /project/{identifier}:
    get:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinOneProjectFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Project
      summary: Find project by Identifier
      description: Returns a single project matching identifier parameter
      operationId: GetProjectByidentifier
      parameters:
        - name: identifier
          in: path
          description: Identifier of project to return
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
          example: '495216'
        - name: language
          in: query
          description: Preferred language for some fields
          required: false
          schema:
            $ref: '#/components/schemas/LanguageParam'
          example: 'nb'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
              examples:
                objectExample:
                  $ref: '#/components/examples/ProjectExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Project'
              examples:
                objectExample:
                  $ref: '#/components/examples/ProjectExample'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
    patch:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinUpdateProjectFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Project
      summary: Update project matching identifier
      description: Updates project data
      operationId: UpdateProject
      parameters:
        - name: identifier
          in: path
          description: Identifier of project to return
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
          example: '495216'
      security:
        - CognitoUserPool: ['https://api.nva.unit.no/scopes/backend', 'https://api.nva.unit.no/scopes/frontend','aws.cognito.signin.user.admin']
      requestBody:
        description: Payload containing modifiable data for project
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatch'
            examples:
              objectExample:
                $ref: '#/components/examples/ProjectPatchExample'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ProjectPatch'
            examples:
              objectExample:
                $ref: '#/components/examples/ProjectPatchExample'
      responses:
        204:
          description: Successful update of resource
          content:
            application/json:
              schema:
                type: string
            application/ld+json:
              schema:
                type: string
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
  /organization:
    get:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinQueryOrganizationFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Organization
      summary: List organizations matching query
      description: Returns a list of organizations based on query parameters
      operationId: ListOrganizations
      parameters:
        - name: query
          in: query
          description: Search for organization by name
          required: false
          schema:
            type: string
            pattern: '.+'
          example: 'Universitetet i'
        - name: depth
          in: query
          description: Depth of sub-organizations included in response
          required: false
          schema:
            type: string
            enum:
              - full
              - top
        - name: page
          in: query
          description: Current page requested
          required: false
          schema:
            type: number
            default: '1'
          example: '1'
        - name: results
          in: query
          description: Results per page
          required: false
          schema:
            type: number
            default: '10'
          example: '10'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizations'
              examples:
                objectExample:
                  $ref: '#/components/examples/OrganizationsExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organizations'
              examples:
                objectExample:
                  $ref: '#/components/examples/OrganizationsExample'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
  /organization/{identifier}:
    get:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinFetchOrganization.Arn}:live/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Organization
      summary: Fetch Organization by identifier
      description: Returns a single Organization matching identifier parameter
      operationId: GetOrganizationByIdentifier
      parameters:
        - name: identifier
          in: path
          description: Identifier of Organization to return
          required: true
          schema:
            type: string
            pattern: '^(?:[0-9]+\.){3}[0-9]{1,3}$'
            example: '20202.0.0.0'
        - name: depth
          in: query
          description: Depth of sub-organizations included in response
          required: false
          schema:
            type: string
            enum:
              - none
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
              examples:
                objectExample:
                  $ref: '#/components/examples/OrganizationExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization'
              examples:
                objectExample:
                  $ref: '#/components/examples/OrganizationExample'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'

  /organization/{identifier}/persons:
    get:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinListOrganizationPersonsFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Organization
      summary: Fetch Persons associated with an given organization
      description: Returns a list of persons belonging to specified organization
      operationId: GetPersonsByOrganization
      parameters:
        - name: identifier
          in: path
          description: Identifier of Organization to return
          required: true
          schema:
            type: string
            pattern: '^(?:[0-9]+\.){3}[0-9]{1,3}$'
            example: '20202.0.0.0'
        - name: page
          in: query
          description: Current page requested
          required: false
          schema:
            type: number
            default: '1'
          example: '3'
        - name: results
          in: query
          description: Results per page
          required: false
          schema:
            type: number
            default: '5'
          example: '10'
        - name: name
          in: query
          description: filter on given name
          required: false
          schema:
            type: string
          example: 'daniel'
        - name: sort
          in: query
          description: Sort results based on parameters
          required: false
          schema:
            type: string
          examples:
            identifierDesc:
              value: 'id desc'
            identifierAsc:
              value: 'id asc'
            nameDesc:
              value: 'name desc'
            nameAsc:
              value: 'name asc'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationPersons'
              examples:
                objectExample:
                  $ref: '#/components/examples/OrganizationPersonsExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrganizationPersons'
              examples:
                objectExample:
                  $ref: '#/components/examples/OrganizationPersonsExample'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
  /organization/{identifier}/projects:
    get:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinListOrganizationProjectsFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Organization
      summary: Fetch Projects associated with an given organization
      description: Returns a list of projects belonging to specified organization
      operationId: GetProjectsByOrganization
      parameters:
        - name: identifier
          in: path
          description: Identifier of Organization to return
          required: true
          schema:
            type: string
            pattern: '^(?:[0-9]+\.){3}[0-9]{1,3}$'
            example: '20202.0.0.0'
        - name: page
          in: query
          description: Current page requested
          required: false
          schema:
            type: number
            default: '1'
          example: '3'
        - name: results
          in: query
          description: Results per page
          required: false
          schema:
            type: number
            default: '5'
          example: '10'
        - name: institution
          in: query
          description: Cristin id, acronym, name, or part of the name of the coordinating institution
          required: false
          schema:
            type: string
        - name: project_manager
          in: query
          description: Cristin id, name or part of the name of the project manager.
          required: false
          schema:
            type: string
        - name: participant
          in: query
          description: Cristin id, name or part of the name of a participant of the project. 'participant' can be used more than once.
          required: false
          schema:
            type: string
        - name: keyword
          in: query
          description: Keyword search. '?keyword=wind energy' makes a search for projects with keywords equal to or a substring of 'wind energy'. keyword can be used more than once
          required: false
          schema:
            type: string
        - name: approval_reference_id
          in: query
          description: Reference id of a project approval.
          required: false
          schema:
            type: string
        - name: funding_source
          in: query
          description: Funding source code.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sorts on 'start_date' and/or 'end_date'. See Search and sort. Default sort order is on 'cristin_project_id' in ascending order.
          required: false
          schema:
            type: string
        - name: unit
          in: query
          description: Unit id
          required: false
          schema:
            type: string
        - name: user
          in: query
          description: A person's username in Cristin together with the institution id separated by ':'
          required: false
          schema:
            type: string
        - name: approved_by
          in: query
          description: Code for the authority that evaluated a project approval.
          required: false
          schema:
            type: string
        - name: funding
          in: query
          description: Funding source code e.g. NFR, and project_code together separated by ':'
          required: false
          schema:
            type: string
        - name: levels
          in: query
          description: How many levels down from 'parent_unit_id' will be included in the search.'levels=1' will return projects registered to 'parent_unit_id'. 'levels' can also be used by itself to search for all projects registered to a known cristin unit down to the given level.
          required: false
          schema:
            type: string
        - name: modified_since
          in: query
          description: Only projects that have been modified since this date will be returned. Format YYYY-MM-DD
          required: false
          schema:
            type: string
        - name: biobank
          in: query
          description: Biobank id. 'biobank' can be used more than once.
          required: false
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationProjects'
              examples:
                objectExample:
                  $ref: '#/components/examples/OrganizationProjectsExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrganizationProjects'
              examples:
                objectExample:
                  $ref: '#/components/examples/OrganizationProjectsExample'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'

  /person:
    get:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinQueryPersonFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Person
      summary: List persons matching query parameters
      description: Returns a list of persons based on query parameters
      operationId: ListPersons
      parameters:
        - name: name
          in: query
          description: Search string. First name and/or last name
          required: true
          schema:
            type: string
            pattern: '.+'
          example: 'Ola Nordmann'
        - name: organization
          in: query
          description: Search string. Parts of organization name or identifier
          required: false
          schema:
            type: string
            pattern: '.+'
          example: 'Universitetet i Tromsø'
        - name: page
          in: query
          description: Current page requested
          required: false
          schema:
            type: number
            default: '1'
          example: '3'
        - name: results
          in: query
          description: Results per page
          required: false
          schema:
            type: number
            default: '5'
          example: '10'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persons'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonsExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Persons'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonsExample'
        400:
          $ref: '#/components/responses/400'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
    post:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinCreatePersonFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Person
      summary: Create one person
      description: Creates one person matching supplied payload
      operationId: PostPerson
      security:
        - CognitoUserPool: ['https://api.nva.unit.no/scopes/backend', 'https://api.nva.unit.no/scopes/frontend','aws.cognito.signin.user.admin']
      requestBody:
        description: Payload containing names and identifier
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonPost'
            examples:
              objectExample:
                $ref: '#/components/examples/PersonPostExample'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PersonPost'
            examples:
              objectExample:
                $ref: '#/components/examples/PersonPostExample'
      responses:
        201:
          description: Successful creation of resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonPostResponse'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonPostResponseExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PersonPostResponse'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonPostResponseExample'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
  /person/{id}:
    parameters:
      - name: id
        in: path
        description: Identifier of person. Can either be Cristin identifier or Orcid
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$|[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{3}[0-9|Xx]'
        example: '359084'
    get:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinFetchPersonFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Person
      summary: Find person by identifier
      description: Returns a single person matching id parameter without NIN
      operationId: GetPersonById
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonExample'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
    patch:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinUpdatePersonFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Person
      summary: Update person matching identifier
      description: Updates person data
      operationId: UpdatePerson
      security:
        - CognitoUserPool: ['https://api.nva.unit.no/scopes/backend', 'https://api.nva.unit.no/scopes/frontend','aws.cognito.signin.user.admin']
      requestBody:
        description: Payload containing modifiable data for person
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonPatch'
            examples:
              objectExample:
                $ref: '#/components/examples/PersonPatchExample'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PersonPatch'
            examples:
              objectExample:
                $ref: '#/components/examples/PersonPatchExample'
      responses:
        204:
          description: Successful update of resource
          content:
            application/json:
              schema:
                type: string
                example: '{}'
            application/ld+json:
              schema:
                type: string
                example: '{}'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
  /person/identityNumber:
    post:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinFetchPersonUsingNin.Arn}:live/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Person
      summary: Query person by national identity number
      description: Returns a single person matching nin query parameter
      operationId: GetPersonByNIN
      security:
        - CognitoUserPool: ['https://api.nva.unit.no/scopes/backend', 'https://api.nva.unit.no/scopes/frontend','aws.cognito.signin.user.admin']
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonNIN'
            examples:
              objectExample:
                $ref: '#/components/examples/PersonNinExample'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonExample'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
  /person/{id}/organization/{orgId}:
    parameters:
      - name: id
        in: path
        description: Identifier of Person
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
        example: '538786'
      - name: orgId
        in: path
        description: Identifier of Organization. Sub unit will be converted to parent institution
        required: true
        schema:
          type: string
          pattern: '^[0-9.]+$'
        example: '186.32.15.0'
    get:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinFetchPersonInstitutionInfoFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Person
      summary: Fetch person organization info by identifiers
      description: Returns person information at organization matching identifier parameters
      operationId: GetPersonOrganizationInfoByIdentifiers
      security:
        - CognitoUserPool: ['https://api.nva.unit.no/scopes/backend', 'https://api.nva.unit.no/scopes/frontend','aws.cognito.signin.user.admin']
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonOrganizationInfo'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonOrganizationInfoExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PersonOrganizationInfo'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonOrganizationInfoExample'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
    patch:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinUpdatePersonInstitutionInfoFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Person
      summary: Update person organization info by identifiers
      description: Updates person email and phone information at given organization
      operationId: UpdatePersonInstitutionInfo
      security:
        - CognitoUserPool: ['https://api.nva.unit.no/scopes/backend', 'https://api.nva.unit.no/scopes/frontend','aws.cognito.signin.user.admin']
      requestBody:
        description: Payload containing one or more optional fields email and phone. Fields can be set to null to erase content
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonInstInfoPatch'
            examples:
              objectExample:
                $ref: '#/components/examples/PersonInstInfoPatchExample'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PersonInstInfoPatch'
            examples:
              objectExample:
                $ref: '#/components/examples/PersonInstInfoPatchExample'
      responses:
        204:
          description: Successful update of resource
          content:
            application/json:
              schema:
                type: string
                example: '{}'
            application/ld+json:
              schema:
                type: string
                example: '{}'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
  /person/{id}/employment:
    parameters:
      - name: id
        in: path
        description: Identifier of Person
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
        example: '359084'
    get:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinQueryPersonEmploymentFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Person
      summary: Query person employments by identifier
      description: Returns all person employments
      operationId: GetPersonEmploymentsByIdentifier
      security:
        - CognitoUserPool: ['https://api.nva.unit.no/scopes/backend', 'https://api.nva.unit.no/scopes/frontend','aws.cognito.signin.user.admin']
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonEmploymentQuery'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonEmploymentQueryExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PersonEmploymentQuery'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonEmploymentQueryExample'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
    post:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinCreatePersonEmploymentFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Person
      summary: Create one person employment
      description: Creates one person employment matching supplied payload
      operationId: PostPersonEmployment
      security:
        - CognitoUserPool: ['https://api.nva.unit.no/scopes/backend', 'https://api.nva.unit.no/scopes/frontend','aws.cognito.signin.user.admin']
      requestBody:
        description: Payload containing employment information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonEmployment'
            examples:
              objectExample:
                $ref: '#/components/examples/PersonEmploymentExample'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PersonEmployment'
            examples:
              objectExample:
                $ref: '#/components/examples/PersonEmploymentExample'
      responses:
        201:
          description: Successful creation of resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonEmployment'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonEmploymentExample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PersonEmployment'
              examples:
                objectExample:
                  $ref: '#/components/examples/PersonEmploymentExample'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
  /person/{id}/employment/{employmentId}:
    parameters:
      - name: id
        in: path
        description: Identifier of Person
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
        example: '359084'
      - name: employmentId
        in: path
        description: Identifier of employment
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
        example: '49272'
    delete:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinDeletePersonEmploymentFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Person
      summary: Delete person employment by identifier
      description: Delete person employment by identifier
      operationId: DeletePersonEmploymentsByIdentifier
      security:
        - CognitoUserPool: ['https://api.nva.unit.no/scopes/backend', 'https://api.nva.unit.no/scopes/frontend','aws.cognito.signin.user.admin']
      responses:
        204:
          description: successful operation
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
    patch:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinUpdatePersonEmploymentFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Person
      summary: Update person employment by identifiers
      description: Updates person employment data
      operationId: UpdatePersonEmployment
      security:
        - CognitoUserPool: ['https://api.nva.unit.no/scopes/backend', 'https://api.nva.unit.no/scopes/frontend','aws.cognito.signin.user.admin']
      requestBody:
        description: Payload containing modifiable data for person employment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonEmployment'
            examples:
              objectExample:
                $ref: '#/components/examples/PersonEmploymentExample'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PersonEmployment'
            examples:
              objectExample:
                $ref: '#/components/examples/PersonEmploymentExample'
      responses:
        204:
          description: Successful update of resource
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'

  /position:
    get:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinFetchPositionFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - Position
      summary: Fetch position codes
      description: Returns postion codes for affiliations
      operationId: GetPositionCodes
      parameters:
        - name: active
          in: query
          description: Fetch only active position codes
          required: false
          schema:
            type: boolean
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionCodes'
              examples:
                objectExample:
                  $ref: '#/components/examples/PositionCodesSample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PositionCodes'
              examples:
                objectExample:
                  $ref: '#/components/examples/PositionCodesSample'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
  /funding-sources:
    get:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinListFundingSourcesFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - FundingSources
      summary: List funding sources
      description: Returns all support funding sources
      operationId: ListFundingSources
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingSources'
              examples:
                objectExample:
                  $ref: '#/components/examples/FundingSourcesSample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FundingSources'
              examples:
                objectExample:
                  $ref: '#/components/examples/FundingSourcesSample'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
  /funding-sources/{identifier}:
    parameters:
      - name: identifier
        in: path
        description: Identifier of funding source
        required: true
        schema:
          type: string
        example: 'NFR'
    get:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaCristinFetchFundingSourceFunction.Arn}/invocations
        httpMethod: POST
        type: "AWS_PROXY"
      tags:
        - FundingSource
      summary: Fetch a funding source by identifier
      description: Returns the funding source with the given identifier
      operationId: FetchFundingSource
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingSourceNew'
              examples:
                objectExample:
                  $ref: '#/components/examples/FundingSourceNewSample'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FundingSourceNew'
              examples:
                objectExample:
                  $ref: '#/components/examples/FundingSourceNewSample'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'

components:
  responses:
    400:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    401:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    403:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    404:
      description: Not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    500:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    502:
      description: Bad Gateway from upstream
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
  schemas:
    Projects:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        id:
          $ref: '#/components/schemas/Id'
        size:
          type: integer
          format: int32
          description: Number of results returned from query
        searchString:
          type: string
          description: The query string used
        processingTime:
          type: integer
          format: int32
          description: Processing time in milliseconds for the query to complete
        firstRecord:
          type: integer
          format: int32
          description: The first record in the current page
        nextResults:
          type: string
          pattern: 'https:\/\/.*$'
          description: URI to the next page in the query results
        previousResults:
          type: string
          pattern: 'https:\/\/.*$'
          description: URI to the previous page in the query results
        hits:
          type: array
          description: The list of projects returned by the query
          items:
            $ref: '#/components/schemas/Project'
    Project:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        id:
          $ref: '#/components/schemas/Id'
        type:
          type: string
          pattern: 'Project'
          description: The type of the returned object, always Project
        identifiers:
          type: array
          description: Identifiers for this project
          items:
            type: object
            properties:
              type:
                type: string
                pattern: 'CristinIdentifier'
                description: Name of identifier, always CristinIdentifier
              value:
                type: integer
                format: int32
                description: Cristin ID of project
        title:
          type: string
          pattern: '.+'
          description: Title of the project
        language:
          type: string
          pattern: '^http:\/\/lexvo.org\/id\/iso639-3\/[a-z]{3}$'
          description: The lexvo URI for the language of the Project
        alternativeTitles:
          type: array
          description: Titles in alternative languages
          items:
            $ref: '#/components/schemas/Languages'
        startDate:
          type: string
          format: date-time
          description: Project start date
        endDate:
          type: string
          format: date-time
          description: Project end date
        coordinatingInstitution:
          $ref: '#/components/schemas/Organization'
        funding:
          type: array
          description: Fundings of this project
          items:
            $ref: '#/components/schemas/Funding'
        contributors:
          type: array
          description: List of contributors on the project
          items:
            type: object
            description: One contributor
            properties:
              type:
                type: string
                enum:
                  - ProjectManager
                  - ProjectParticipant
                description: Type of contributor. Can be ProjectManager or ProjectParticipant
              identity:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Id'
                  type:
                    type: string
                    pattern: 'Person'
                    description: Type of identity. Always Person
                  firstName:
                    type: string
                    pattern: '.+'
                    description: First name
                  lastName:
                    type: string
                    pattern: '.+'
                    description: Last name
              affiliation:
                $ref: '#/components/schemas/Organization'
        status:
          type: string
          enum:
            - NOTSTARTED
            - ACTIVE
            - CONCLUDED
          description: Project status, based on start_date and end_date.
        academicSummary:
          $ref: '#/components/schemas/Languages'
        popularScientificSummary:
          $ref: '#/components/schemas/Languages'
        published:
          type: boolean
          description: If the project is published in Cristin
        publishable:
          type: boolean
          description: If the project has all fields mandatory for being published
        created:
          type: object
          properties:
            sourceShortName:
              type: string
              description: Short name of the source that created the project
            date:
              type: string
              format: date-time
              description: Date the project was created
        lastModified:
          type: object
          properties:
            sourceShortName:
              type: string
              description: Short name of the source that last modified the project
            date:
              type: string
              format: date-time
              description: Date the project was modified
        contactInfo:
          type: object
          properties:
            type:
              type: string
              pattern: 'ContactInfo'
              description: Type of object
            contactPerson:
              type: string
            organization:
              type: string
            email:
              type: string
            phone:
              type: string
        fundingAmount:
          type: object
          properties:
            type:
              type: string
              pattern: 'FundingAmount'
              description: Type of object
            currency:
              type: string
              description: Currency code. Currently only in NOK (Norwegian Kroner)
            value:
              type: number
        method:
          $ref: '#/components/schemas/Languages'
        equipment:
          $ref: '#/components/schemas/Languages'
        projectCategories:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: The type of project category
              label:
                $ref: '#/components/schemas/Languages'
        keywords:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: The keyword code
              label:
                $ref: '#/components/schemas/Languages'
        externalSources:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: The type of object. Here always ExternalSource
              identifier:
                type: string
                description: The source reference identifier as it is in upstream
              name:
                type: string
                description: The name of the source in short form
        relatedProjects:
          type: array
          items:
            type: string
            description: Uri to the related project
        institutionsResponsibleForResearch:
          type: array
          description: List of institutions responsible for research on the project
          items:
            $ref: '#/components/schemas/Organization'
        healthProjectData:
          type: object
          description: 'If project is related to health, this field will contain data'
          properties:
            type:
              type: string
              description: 'Health project classification. Drugstudy: Drug study (en), Legemiddelstudium (nb), Legemedelstudium (nn); Otherclin: Other clinical trial (en), Annet klinisk behandlingsstudium (nb), Anna klinisk behandlingsstudium (nn); Otherstudy: Other study (en), Annet studium (nb), Anna studium (nn).'
              enum:
                - Drugstudy
                - Otherclin
                - Otherstudy
            label:
              $ref: '#/components/schemas/Languages'
            clinicalTrialPhase:
              type: string
              description: 'Mandatory if type is Drugstudy.'
              enum:
                - PhaseI
                - PhaseII
                - PhaseIII
                - PhaseIV
        approvals:
          $ref: '#/components/schemas/Approvals'
    ProjectPost:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        type:
          type: string
          pattern: 'Project'
          description: The type of the returned object, always Project
        title:
          type: string
          pattern: '.+'
          description: Title of the project
        language:
          type: string
          pattern: '^http:\/\/lexvo.org\/id\/iso639-3\/[a-z]{3}$'
          description: The lexvo URI for the language of the Project
        alternativeTitles:
          type: array
          description: Titles in alternative languages
          items:
            $ref: '#/components/schemas/Languages'
        startDate:
          type: string
          format: date-time
          description: Project start date
          example: '2012-01-09T00:00:00.001Z'
        endDate:
          type: string
          format: date-time
          description: Project end date
          example: '2018-01-09T00:00:00.001Z'
        coordinatingInstitution:
          $ref: '#/components/schemas/Organization'
        contributors:
          type: array
          description: List of contributors on the project (ProjectManager is required and needs an identity)
          items:
            type: object
            description: One contributor
            properties:
              type:
                type: string
                enum:
                  - ProjectManager
                  - ProjectParticipant
                description: Type of contributor. Can be ProjectManager or ProjectParticipant
              identity:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Id'
                  type:
                    type: string
                    pattern: 'Person'
                    description: Type of identity. Always Person
                  firstName:
                    type: string
                    pattern: '.+'
                    description: First name (needed if identity is missing)
                  lastName:
                    type: string
                    pattern: '.+'
                    description: Last name (needed if identity is missing)
                  email:
                    type: string
                    pattern: '.*'
                    description: Email
                  phone:
                    type: string
                    pattern: '.*'
                    description: Phone number

              affiliation:
                $ref: '#/components/schemas/Organization'
        status:
          type: string
          enum:
            - NOTSTARTED
            - ACTIVE
            - CONCLUDED
          description: Project status, based on start_date and end_date.
        academicSummary:
          $ref: '#/components/schemas/Languages'
        popularScientificSummary:
          $ref: '#/components/schemas/Languages'
        method:
          $ref: '#/components/schemas/Languages'
        equipment:
          $ref: '#/components/schemas/Languages'
        institutionsResponsibleForResearch:
          type: array
          description: List of institutions responsible for research on the project
          items:
            $ref: '#/components/schemas/Organization'
        healthProjectData:
          type: object
          description: 'If project is related to health, this field will contain data'
          properties:
            type:
              type: string
              description: 'Health project classification. Drugstudy: Drug study (en), Legemiddelstudium (nb), Legemedelstudium (nn); Otherclin: Other clinical trial (en), Annet klinisk behandlingsstudium (nb), Anna klinisk behandlingsstudium (nn); Otherstudy: Other study (en), Annet studium (nb), Anna studium (nn).'
              enum:
                - Drugstudy
                - Otherclin
                - Otherstudy
            clinicalTrialPhase:
              type: string
              description: 'Mandatory if type is Drugstudy.'
              enum:
                - PhaseI
                - PhaseII
                - PhaseIII
                - PhaseIV
        approvals:
          $ref: '#/components/schemas/Approvals'
        funding:
          type: array
          description: Fundings for this project
          items:
            $ref: '#/components/schemas/FundingPost'
        keywords:
          type: array
          description: Project keywords
          items:
            properties:
              code:
                type: string
                description: Keyword code
        projectCategories:
          type: array
          description: Project categories
          items:
            properties:
              code:
                type: string
                description: project category code
        relatedProjects:
          type: array
          items:
            type: string
            description: URI to the related project
        contactInfo:
          type: object
          properties:
            type:
              type: string
              pattern: 'ContactInfo'
              description: Always ContactInfo
            contactPerson:
              type: string
            organization:
              type: string
            email:
              type: string
            phone:
              type: string
    ProjectPatch:
      type: object
      properties:
        title:
          type: string
          pattern: '.+'
          description: Title of the project
        language:
          type: string
          pattern: '^http:\/\/lexvo.org\/id\/iso639-3\/[a-z]{3}$'
          description: The lexvo URI for the language of the Project
        alternativeTitles:
          type: array
          description: Titles in alternative languages
          items:
            $ref: '#/components/schemas/Languages'
        startDate:
          type: string
          format: date-time
          description: Project start date
          example: '2012-01-09T00:00:00.001Z'
        endDate:
          type: string
          format: date-time
          description: Project end date
          example: '2018-01-09T00:00:00.001Z'
        coordinatingInstitution:
          $ref: '#/components/schemas/Organization'
        contributors:
          type: array
          description: List of contributors on the project
          items:
            type: object
            description: One contributor
            properties:
              type:
                type: string
                enum:
                  - ProjectManager
                  - ProjectParticipant
                description: Type of contributor. Can be ProjectManager or ProjectParticipant
              identity:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Id'
                  type:
                    type: string
                    pattern: 'Person'
                    description: Type of identity. Always Person
              affiliation:
                $ref: '#/components/schemas/Organization'
        funding:
          type: array
          description: List of fundings for the project
          items:
            type: object
            properties:
              source:
                type: object
                properties:
                  code:
                    type: string
                    description: Code of the funding source
              code:
                type: string
                description: Project code of the funding related to this source
        keywords:
          type: array
          items:
            $ref: '#/components/schemas/TypedLabelPostPatch'
        projectCategories:
          type: array
          items:
            $ref: '#/components/schemas/TypedLabelPostPatch'
        relatedProjects:
          type: array
          items:
            type: string
            description: URI or numeric value for the identifier of the related project
        academicSummary:
          $ref: '#/components/schemas/Languages'
        popularScientificSummary:
          $ref: '#/components/schemas/Languages'
        method:
          $ref: '#/components/schemas/Languages'
        equipment:
          $ref: '#/components/schemas/Languages'
    Problem:
      type: object
      properties:
        title:
          type: string
          description: Human-readable description of the error status
        status:
          type: integer
          format: int32
          description: The HTTP status code associated with the problem
        detail:
          type: string
          description: A more detailed error message describing the error and potential mitigations
        requestId:
          type: string
          description: Unique id for the request
    LanguageParam:
      type: string
      enum:
        - nb
        - nn
        - en
      default: 'nb'
    Context:
      type: string
      pattern: 'https:\/\/.*$'
      description: The JSON-LD context object for the data, which describes the object in the data and allows machine processing of the data at a semantic level
    Id:
      type: string
      pattern: 'https:\/\/.*$'
      description: The URI of the object ID
    Languages:
      type: object
      pattern: '^[a-z]{2}$'
      additionalProperties:
        type: string
        pattern: '.+'
    Organizations:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        id:
          $ref: '#/components/schemas/Id'
        size:
          type: integer
          format: int32
          description: Number of results returned from query
        searchString:
          type: string
          description: The query string used
        processingTime:
          type: integer
          format: int32
          description: Processing time in milliseconds for the query to complete
        firstRecord:
          type: integer
          format: int32
          description: The first record in the current page
        nextResults:
          type: string
          pattern: 'https:\/\/.*$'
          description: URI to the next page in the query results
        previousResults:
          type: string
          pattern: 'https:\/\/.*$'
          description: URI to the previous page in the query results
        hits:
          type: array
          description: The list of organizations returned by the query
          items:
            $ref: '#/components/schemas/Organization'
    Organization:
      type: object
      description: Affiliated organization
      properties:
        id:
          $ref: '#/components/schemas/Id'
        type:
          type: string
          pattern: 'Organization'
          description: Always Organization
        name:
          type: array
          items:
            $ref: '#/components/schemas/Languages'
        acronym:
          type: string
          pattern: '.*'
          description: 'Short mnemonic identifying Organization'
        partOf:
          description: List of Organizations this organization is part of
          type: array
          items:
            type: object
            properties:
              organization:
                $ref: '#/components/schemas/Organization'
    Funding:
      type: object
      description: Funding
      properties:
        code:
          type: string
        type:
          type: string
          pattern: 'Funding'
          description: Always Funding
        source:
          $ref: '#/components/schemas/FundingSource'
    FundingSource:
      type: object
      description: Funding source
      properties:
        type:
          type: string
          pattern: 'FundingSource'
          description: Always FundingSource
        names:
          $ref: '#/components/schemas/Languages'
        code:
          type: string
    Approvals:
      type: array
      required: [ date, authority, status ]
      items:
        type: object
        properties:
          type:
            type: string
          date:
            type: string
            format: date-time
            description: 'Date of approval'
          authority:
            type: string
            description: 'Approval authority. Only certain combinations of authority and applicationCode are allowed. 
            RegionalEthicalCommittees: Regional committees for medical and health research ethics (en), 
            Regionale komitéer for medisinsk og helsefaglig forskningsetikk (REK) (nb), 
            Regionale komitéer for medisinsk og helsefaglig forskningsetikk (REK) (nn), 
            applicationCode: EthicalApproval or BioBank; 
            NorwegianAnimalResearchAuthority: The Norwegian Animal Research Authority (en), Forsøksdyrutvalget (nb), Forsøksdyrutvalet (nn), 
            applicationCode: AnimalTesting; 
            NorwegianDataProtectionAuthority: The Norwegian Data Protection Authority (en), Datatilsynet (nb), Datatilsynet (nn), 
            applicationCode: SensitiveInformation; 
            NorwegianMedicinesAgency: Norwegian Medicines Agency (en), Statens legemiddelverk (nb), Statens legemiddelverk (nn), 
            applicationCode: DrugTrial; 
            NorwegianDirectorateOfHealth: Norwegian Directorate of Health (en), Helsedirektoratet (nb), Helsedirektoratet (nn), 
            applicationCode: BioTechnology or MedicalEquipment.'
            enum:
              - RegionalEthicalCommittees
              - NorwegianAnimalResearchAuthority
              - NorwegianDataProtectionAuthority
              - NorwegianMedicinesAgency
              - NorwegianDirectorateOfHealth
          status:
            type: string
            description: 'Status of the application sent to the approval authority. 
            NOTAPPLIED: Not applied (en), Ikke søkt (nb), Ikkje søkt (nn); 
            APPLIED: Applied (en), Søkt (nb), Søkt (nn); 
            APPROVED: Approved (en), Godkjent (nb), Godkjent (nn); 
            DECLINED: Declined (en), Avvist (nb) Avvist (nn); 
            REJECTED: Rejected (en), Avslått (nb), Avslått (nn).'
            enum:
              - NotApplied
              - Applied
              - Approved
              - Declined
              - Rejected
          applicationCode:
            type: string
            description: 'These codes apply only for applications to the approval authorities. 
            Only certain combinations of applicationCode and authority are allowed, see authority above. 
            EthicalApproval: Application for ethical approval of a health research project (en), 
            Søknad om etisk godkjenning, Helseforskningsprosjekt (nb), Søknad om etisk godkjenning av helseforskingsprosjekt (nn); 
            BioBank: Application for establishing a biobank (en), Søknad om etablering av biobank (nb), 
            Søknad om etablering av biobank (nn); 
            DrugTrial: Application for a clinical drug trial (en), Søknad om legemiddelutprøving (nb), Søknad om legemiddelutprøving (nn); 
            BioTechnology: Application for medical use of biotechnology (en), Søknad om medisinsk bruk av bioteknologi (nb), 
            Søknad om medisinsk bruk av bioteknologi (nn); 
            MedicalEquipment: Application for clinical testing for medical equipment (en), 
            Søknad om klinisk utprøving av medisinsk utstyr (nb), Søknad om klinisk utprøving av medisinsk utstyr (nn); 
            AnimalTesting: Application for testing on animals (en), Søknad om å utføre forsøk på dyr (nb), 
            Søknad om å utføre forsøk på dyr (nn); 
            SensitiveInformation: Application for license tp process sensitive personal information (en), 
            Søknad om konsesjon for behandling av sensitive personopplysninger (nb), 
            Søknad om konsesjon for handsaming av sensitive personopplysingar(nn).'
            enum:
              - EthicalApproval
              - BioBank
              - DrugTrial
              - BioTechnology
              - MedicalEquipment
              - AnimalTesting
              - SensitiveInformation
          identifier:
            type: string
            description: 'Reference ID used by the approval authority for this approval.'
          authorityName:
            $ref: '#/components/schemas/Languages'
    FundingPost:
      type: object
      description: Funding creation
      properties:
        type:
          type: string
          pattern: 'Funding'
          description: Always Funding
        code:
          type: string
          description: Project code of the funding
        source:
          properties:
            type:
              type: string
              pattern: 'FundingSource'
              description: Always FundingSource
            code:
              type: string
              description: Code of the funding source, like NFR
    TypedLabelPostPatch:
      type: object
      properties:
        type:
          type: string
          description: The type (code)
    Persons:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        id:
          $ref: '#/components/schemas/Id'
        size:
          type: integer
          format: int32
          description: Number of results returned from query
        searchString:
          type: string
          description: The query string used
        processingTime:
          type: integer
          format: int32
          description: Processing time in milliseconds for the query to complete
        firstRecord:
          type: integer
          format: int32
          description: The first record in the current page
        nextResults:
          type: string
          pattern: 'https:\/\/.*$'
          description: URI to the next page in the query results
        previousResults:
          type: string
          pattern: 'https:\/\/.*$'
          description: URI to the previous page in the query results
        hits:
          type: array
          description: The list of persons returned by the query
          items:
            $ref: '#/components/schemas/Person'
    Person:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        id:
          $ref: '#/components/schemas/Id'
        type:
          type: string
          pattern: 'Person'
          description: The type of the returned object, always Person
        identifiers:
          type: array
          description: Identifiers for this person
          items:
            type: object
            properties:
              type:
                type: string
                pattern: 'CristinIdentifier|ORCID|NationalIdentificationNumber'
                description: Name of identifier
              value:
                type: string
                pattern: '\d+|\d{4}-\d{4}-\d{4}-\d{4}'
                description: Value of identifier
        names:
          type: array
          description: Names for this person
          items:
            type: object
            properties:
              type:
                type: string
                pattern: 'PreferredFirstName|PreferredLastName|FirstName|LastName'
                description: Name of identifier
              value:
                type: string
                pattern: '.+'
                description: Value of identifier
        contactDetails:
          type: object
          description: Contact information
          properties:
            telephone:
              type: string
              pattern: '\+?\d+'
        image:
          $ref: '#/components/schemas/Id'
        affiliations:
          type: array
          description: The list of person affiliations
          items:
            $ref: '#/components/schemas/Affiliation'
        employments:
          type: array
          description: Employments for this person. Visible to authorized users
          items:
            $ref: '#/components/schemas/PersonEmployment'
    PersonPost:
      type: object
      required: [ identifiers, names ]
      properties:
        identifiers:
          type: array
          description: Identifier for this person
          items:
            type: object
            properties:
              type:
                type: string
                pattern: 'NationalIdentificationNumber'
                description: Name of identifier
              value:
                type: string
                pattern: '[0-9]{11}'
                description: Value of identifier
        names:
          type: array
          description: Names for this person. Required fields are FirstName and LastName
          items:
            type: object
            properties:
              type:
                type: string
                pattern: 'PreferredFirstName|PreferredLastName|FirstName|LastName'
                description: Name of identifier
              value:
                type: string
                pattern: '.+'
                description: Value of identifier
        employments:
          type: array
          description: Employments for this person
          items:
            $ref: '#/components/schemas/PersonEmployment'
    PersonPostResponse:
      type: object
      properties:
        identifiers:
          type: array
          description: Identifiers for this person
          items:
            type: object
            properties:
              type:
                type: string
                pattern: 'CristinIdentifier'
                description: Name of identifier
              value:
                type: string
                pattern: '\d+'
                description: Value of identifier
        names:
          type: array
          description: Names for this person
          items:
            type: object
            properties:
              type:
                type: string
                pattern: 'PreferredFirstName|PreferredLastName|FirstName|LastName'
                description: Name of identifier
              value:
                type: string
                pattern: '.+'
                description: Value of identifier
        affiliations:
          type: array
          description: The list of person affiliations
          items:
            $ref: '#/components/schemas/Affiliation'
        employments:
          type: array
          description: Employments for this person
          items:
            $ref: '#/components/schemas/PersonEmployment'
    PersonPatch:
      type: object
      properties:
        orcid:
          type: string
          nullable: true
          description: Users can update their own orcid when logged in, otherwise user administrator can do the update
        firstName:
          type: string
        lastName:
          type: string
        preferredFirstName:
          type: string
          nullable: true
        preferredLastName:
          type: string
          nullable: true
        reserved:
          type: boolean
          description: If person should be hidden from public view
        employments:
          type: array
          description: Employments for this person. Only for authorized users
          items:
            $ref: '#/components/schemas/PersonEmployment'
    PersonNIN:
      type: object
      properties:
        type:
          type: string
          description: The type of the object
        value:
          type: string
          description: String representing the value of the object
    Affiliation:
      type: object
      description: Person affiliation
      properties:
        type:
          type: string
          pattern: 'Affiliation'
          description: Always Affiliation
        organization:
          $ref: '#/components/schemas/Id'
        active:
          type: boolean
          description: Person has active affiliation
        role:
          type: object
          description: Person's role at affiliated organization
          properties:
            id:
              $ref: '#/components/schemas/Id'
            type:
              type: string
              pattern: 'Role'
              description: Always Role
            labels:
              $ref: '#/components/schemas/Languages'
    PersonOrganizationInfo:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        id:
          $ref: '#/components/schemas/Id'
        email:
          type: string
          description: Email at this organization
        phone:
          type: string
          description: Phone at this organization
    PersonInstInfoPatch:
      type: object
      properties:
        phone:
          type: string
          description: Phone number at this institution
        email:
          type: string
          description: Email address at this institution
    PositionCodes:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        positions:
          type: array
          description: The list of position codes returned by the service
          items:
            $ref: '#/components/schemas/PositionCode'
    PositionCode:
      type: object
      properties:
        id:
          type: string
        name:
          type: array
          description: Titles in alternative languages
          items:
            $ref: '#/components/schemas/Languages'
        enabled:
          type: boolean
    FundingSources:
      type: object
      required:
        - type
        - '@Context'
        - id
        - sources
      properties:
        type:
          type: string
          description: Always FundingSources
        '@context':
          $ref: '#/components/schemas/Context'
        id:
          type: string
          description: URI to the query
        sources:
          type: array
          description: The list of funding sources
          items:
            $ref: '#/components/schemas/FundingSourceNew'
    FundingSourceNew:
      type: object
      required:
        - type
        - id
        - identifier
        - name
      properties:
        type:
          type: string
          description: Always FundingSources
        id:
          type: string
          description: URI to the resource itself
        identifier:
          type: string
          description: the identifier (code) for the funding source
        name:
          $ref: '#/components/schemas/Languages'

    PersonEmploymentQuery:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        id:
          $ref: '#/components/schemas/Id'
        size:
          type: integer
          format: int32
          description: Number of results returned from query
        searchString:
          type: string
          description: The query string used
        processingTime:
          type: integer
          format: int32
          description: Processing time in milliseconds for the query to complete
        firstRecord:
          type: integer
          format: int32
          description: The first record in the current page
        nextResults:
          type: string
          pattern: 'https:\/\/.*$'
          description: URI to the next page in the query results
        previousResults:
          type: string
          pattern: 'https:\/\/.*$'
          description: URI to the previous page in the query results
        hits:
          type: array
          description: The list of employments returned by the query
          items:
            $ref: '#/components/schemas/PersonEmployment'
    PersonEmployment:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        type:
          $ref: '#/components/schemas/Id'
        organization:
          $ref: '#/components/schemas/Id'
        startDate:
          type: string
          format: date-time
          description: Employment start date
        endDate:
          type: string
          format: date-time
          description: Optional employment end date
        fullTimeEquivalentPercentage:
          type: number
          format: double
          description: Optional employment percentage
    OrganizationPersons:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        id:
          $ref: '#/components/schemas/Id'
        size:
          type: integer
          format: int32
          description: Number of results returned from query
        processingTime:
          type: integer
          format: int32
          description: Processing time in milliseconds for the query to complete
        firstRecord:
          type: integer
          format: int32
          description: The first record in the current page
        nextResults:
          type: string
          pattern: 'https:\/\/.*$'
          description: URI to the next page in the query results
        previousResults:
          type: string
          pattern: 'https:\/\/.*$'
          description: URI to the previous page in the query results
        hits:
          type: array
          description: The list of persons returned by the query
          items:
            $ref: '#/components/schemas/Person'
    OrganizationProjects:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        id:
          $ref: '#/components/schemas/Id'
        size:
          type: integer
          format: int32
          description: Number of results returned from query
        processingTime:
          type: integer
          format: int32
          description: Processing time in milliseconds for the query to complete
        firstRecord:
          type: integer
          format: int32
          description: The first record in the current page
        nextResults:
          type: string
          pattern: 'https:\/\/.*$'
          description: URI to the next page in the query results
        previousResults:
          type: string
          pattern: 'https:\/\/.*$'
          description: URI to the previous page in the query results
        hits:
          type: array
          description: The list of persons returned by the query
          items:
            $ref: '#/components/schemas/Project'
  examples:
    ProjectsExample:
      value:
        '@context': 'https://bibsysdev.github.io/src/project-search-context.json'
        id: 'https://api.dev.nva.aws.unit.no/cristin/project?query=helse&language=nb&page=1&results=5'
        size: 150
        searchString: 'query=helse&language=nb&page=1&results=5'
        processingTime: 800
        firstRecord: 1
        nextResults: 'https://api.dev.nva.aws.unit.no/cristin/project?query=helse&language=nb&page=2&results=5'
        previousResults: ''
        hits:
          - id: 'https://api.dev.nva.aws.unit.no/cristin/project/359084'
            type: 'Project'
            identifiers:
              - type: 'CristinIdentifier'
                value: '359084'
            title: 'Example Title'
            language: 'http://lexvo.org/id/iso639-3/nno'
            alternativeTitles:
              - 'nb': 'Eksempel på tittel'
            startDate: '2012-01-09T00:00:00Z'
            endDate: '2017-12-31T00:00:00Z'
            funding:
              - type: 'Funding'
                source:
                  type: "FundingSource"
                  names:
                    nb: "Egen institusjon"
                  code: "EI"
                code: "1234556"
            coordinatingInstitution:
              id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
              type: 'Organization'
              name:
                'nb': 'OsloMet - storbyuniversitetet'
            contributors:
              - type: 'ProjectManager'
                identity:
                  id: 'https://api.dev.nva.aws.unit.no/cristin/person/325953'
                  type: 'Person'
                  firstName: 'Ola'
                  lastName: 'Nordmann'
                affiliation:
                  id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
                  type: 'Organization'
                  name:
                    'nb': 'OsloMet - storbyuniversitetet'
              - type: 'ProjectParticipant'
                identity:
                  id: 'https://api.dev.nva.aws.unit.no/cristin/person/326035'
                  type: 'Person'
                  firstName: 'Kari'
                  lastName: 'Olsen'
                affiliation:
                  id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
                  type: 'Organization'
                  name:
                    'nb': 'OsloMet - storbyuniversitetet'
            status: CONCLUDED
            academicSummary:
              no: "Jeg arbeider med å skrive en bok, med foreløpig tittel, Digitale bilder. "
            popularScientificSummary:
              no: "<p>FoU-prosjektet skal fremme forskningsbasert undervisning i digitale medier knyttet til Faglærerutdanningen i formgiving, kunst og håndverk på Institutt for estetiske fag."
            published: true
            publishable: true
            created:
              sourceShortName: "REK"
              date: "2019-12-31T09:45:17Z"
            lastModified:
              date: "2020-12-31T09:45:17Z"
            contactInfo:
              type: 'ContactInfo'
              contactPerson: 'Helge Testesen'
              organization: 'Agricultural University of Iceland'
              email: 'helge@test.no'
              phone: '44223355'
            fundingAmount:
              type: 'FundingAmount'
              currency: 'NOK'
              value: 5660000.0
            method:
              no: "Dette er metoden"
            equipment:
              no: "Dette er utstyret"
            projectCategories:
              - type: 'APPLIEDRESEARCH'
                label:
                  'en': 'Applied Research'
            keywords:
              - type: '4837'
                label:
                  'en': 'Supply Chain'
            externalSources:
              - type: 'ExternalSource'
                identifier: '2016/2000'
                name: 'REK'
            relatedProjects:
              - 'https://api.dev.nva.aws.unit.no/cristin/project/483302'
            institutionsResponsibleForResearch:
              - type: 'Organization'
                id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
            healthProjectData:
              type: 'Drugstudy'
              label:
                en: 'Drug study'
              clinicalTrialPhase: 'PhaseIII'
            approvals:
              - type: 'Approval'
                date: '2020-12-31T09:45:17Z'
                authority: 'RegionalEthicalCommittees'
                status: 'Approved'
                applicationCode: 'EthicalApproval'
                identifier: '2017/800'
                authorityName:
                  en: 'Regional committees for medical and health research ethics'
    ProjectExample:
      value:
        '@context': 'https://bibsysdev.github.io/src/project-context.json'
        id: 'https://api.dev.nva.aws.unit.no/cristin/project/359084'
        type: 'Project'
        identifiers:
          - type: 'CristinIdentifier'
            value: '359084'
        title: 'Example Title'
        language: 'http://lexvo.org/id/iso639-3/nno'
        alternativeTitles:
          - 'nb': 'Eksempel på tittel'
        startDate: '2012-01-09T00:00:00Z'
        endDate: '2017-12-31T00:00:00Z'
        funding:
          - type: 'Funding'
            source:
              type: "FundingSource"
              names:
                nb: "Egen institusjon"
              code: "EI"
            code: "134455"
        coordinatingInstitution:
          id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
          type: 'Organization'
          name:
            'nb': 'OsloMet - storbyuniversitetet'
        contributors:
          - type: 'ProjectManager'
            identity:
              id: 'https://api.dev.nva.aws.unit.no/cristin/person/325953'
              type: 'Person'
              firstName: 'Ola'
              lastName: 'Nordmann'
            affiliation:
              id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
              type: 'Organization'
              name:
                'nb': 'OsloMet - storbyuniversitetet'
          - type: 'ProjectParticipant'
            identity:
              id: 'https://api.dev.nva.aws.unit.no/cristin/person/326035'
              type: 'Person'
              firstName: 'Kari'
              lastName: 'Olsen'
            affiliation:
              id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
              type: 'Organization'
              name:
                'nb': 'OsloMet - storbyuniversitetet'
        status: CONCLUDED
        academicSummary:
          en: "Summary in an academic manner"
        popularScientificSummary:
          en: "popularScientificSummary popularScientificSummary popularScientificSummary"
        published: true
        publishable: true
        created:
          sourceShortName: "REK"
          date: "2019-12-31T09:45:17Z"
        lastModified:
          date: "2020-12-31T09:45:17Z"
        contactInfo:
          type: 'ContactInfo'
          contactPerson: 'Helge Testesen'
          organization: 'Agricultural University of Iceland'
          email: 'helge@test.no'
          phone: '44223355'
        fundingAmount:
          type: 'FundingAmount'
          currency: 'NOK'
          value: 5660000.0
        method:
          no: "Dette er metoden"
        equipment:
          no: "Dette er utstyret"
        projectCategories:
          - type: 'APPLIEDRESEARCH'
            label:
              'en': 'Applied Research'
        keywords:
          - type: '4837'
            label:
              'en': 'Supply Chain'
        externalSources:
          - type: 'ExternalSource'
            identifier: '2016/2000'
            name: 'REK'
        relatedProjects:
          - 'https://api.dev.nva.aws.unit.no/cristin/project/483302'
        institutionsResponsibleForResearch:
          - type: 'Organization'
            id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
        healthProjectData:
          type: 'Drugstudy'
          label:
            en: 'Drug study'
          clinicalTrialPhase: 'PhaseIII'
        approvals:
          - type: 'Approval'
            date: '2020-12-31T09:45:17Z'
            authority: 'RegionalEthicalCommittees'
            status: 'Approved'
            applicationCode: 'EthicalApproval'
            identifier: '2017/800'
            authorityName:
              en: 'Regional committees for medical and health research ethics'
    ProjectPatchExample:
      value:
        title: 'Updated Title'
        alternativeTitles:
          - 'en': 'Updated Title in english'
        startDate: '2022-10-09T00:00:00.001Z'
        endDate: '2030-12-31T00:00:00.001Z'
        coordinatingInstitution:
          type: 'Organization'
          id: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0'
        contributors:
          - type: 'ProjectManager'
            identity:
              type: 'Person'
              id: 'https://api.dev.nva.aws.unit.no/cristin/person/538786'
        funding:
          - source:
              code: 'NFR'
            code: '1234/PO'
        keywords:
          - type: '4837'
          - type: '5686'
        projectCategories:
          - type: 'PHD'
        relatedProjects:
          - 'https://api.dev.nva.aws.unit.no/cristin/project/483302'
        academicSummary:
          en: 'Some academic summary'
          nn: 'null'
        popularScientificSummary:
          en: 'Some popular scientific summary'
          nb: 'null'
        method:
          en: 'Some method'
        equipment:
          en: 'Some equipment'
    ProjectPostExample:
      value:
        '@context': 'https://bibsysdev.github.io/src/project-context.json'
        type: 'Project'
        title: 'Example Title'
        language: 'http://lexvo.org/id/iso639-3/nno'
        alternativeTitles:
          - 'nb': 'Eksempel på tittel'
        startDate: '2012-01-09T00:00:00.001Z'
        endDate: '2017-12-31T00:00:00.001Z'
        coordinatingInstitution:
          type: 'Organization'
          id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
        contributors:
          - type: 'ProjectManager'
            identity:
              type: 'Person'
              id: 'https://api.dev.nva.aws.unit.no/cristin/person/325953'
            affiliation:
              type: 'Organization'
              id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
          - type: 'ProjectParticipant'
            identity:
              type: 'Person'
              id: 'https://api.dev.nva.aws.unit.no/cristin/person/326035'
            affiliation:
              type: 'Organization'
              id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
          - type: 'ProjectParticipant'
            identity:
              type: 'Person'
              FirstName: 'Kjell Ola'
              LastName: 'Nordmann'
              Email: 'ola.nordmann@example.org'
              Phone: '12345678'
            affiliation:
              type: 'Organization'
              id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
        status: CONCLUDED
        academicSummary:
          en: "Summary in an academic manner"
        popularScientificSummary:
          en: "popularScientificSummary popularScientificSummary popularScientificSummary"
        method:
          en: "My method"
        equipment:
          en: "My equipment"
        institutionsResponsibleForResearch:
          - type: 'Organization'
            id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
        healthProjectData:
          type: 'Drugstudy'
          clinicalTrialPhase: 'PhaseIII'
        approvals:
          - type: 'Approval'
            date: '2020-12-31T09:45:17Z'
            authority: 'RegionalEthicalCommittees'
            status: 'Approved'
            applicationCode: 'EthicalApproval'
            identifier: '2017/800'
        funding:
          - type: 'Funding'
            source:
              type: 'FundingSource'
              code: 'NFR'
            code: '1234'
        keywords:
          - code: '4245'
          - code: '5686'
        projectCategories:
          - code: 'PHD'
        relatedProjects:
          - 'https://api.dev.nva.aws.unit.no/cristin/project/21500'
        contactInfo:
          type: 'ContactInfo'
          contactPerson: 'Navn Navnesen'
          organization: 'Universitetet i Oslo'
          email: 'navn.navnesen@uio.no'
          phone: '99223344'
    OrganizationsExample:
      value:
        '@context': 'https://api.dev.nva.aws.unit.no/cristin/organization'
        id: 'https://api.dev.nva.aws.unit.no/cristin/organization?depth=top&query=storby&page=1&results=5'
        size: 150
        searchString: 'depth=top&query=storby&page=1&results=5'
        processingTime: 800
        firstRecord: 1
        nextResults: 'https://api.dev.nva.aws.unit.no/cristin/organization?depth=top&query=storby&page=2&results=5'
        previousResults: ''
        hits:
          - id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
            type: 'Organization'
            name:
              'nb': 'OsloMet - storbyuniversitetet'
              'en': 'Oslomet - Oslo Metropolitan University'
            acronym: 'OSLOMET'
            partOf:
              - id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
                type: 'Organization'
                name:
                  'nb': 'OsloMet - storbyuniversitetet'
                  'en': 'Oslomet - Oslo Metropolitan University'
            hasPart:
              - id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.16.2.0'
                type: 'Organization'
                name:
                  'en': 'Norwegian Social Research'
                  'nb': 'Velferdsforskningsinstituttet NOVA'

    OrganizationExample:
      value:
        '@context': 'https://api.dev.nva.aws.unit.no/cristin/organization'
        id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
        type: 'Organization'
        name:
          'nb': 'OsloMet - storbyuniversitetet'
          'en': 'Oslomet - Oslo Metropolitan University'
        acronym: 'OSLOMET'
        partOf:
          - id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
            type: 'Organization'
            name:
              'nb': 'OsloMet - storbyuniversitetet'
              'en': 'Oslomet - Oslo Metropolitan University'
        hasPart:
          - id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.16.2.0'
            type: 'Organization'
            name:
              'en': 'Norwegian Social Research'
              'nb': 'Velferdsforskningsinstituttet NOVA'
    PersonsExample:
      value:
        '@context': 'https://example.org/person-search-context.json'
        id: 'https://api.dev.nva.aws.unit.no/cristin/person/?name=Ola+Nordmann&page=1&results=5'
        size: 150
        searchString: 'name=Ola+Nordmann&page=1&results=5'
        processingTime: 800
        firstRecord: 1
        nextResults: 'https://api.dev.nva.aws.unit.no/cristin/person/?name=Ola+Nordmann&page=2&results=5'
        previousResults: ''
        hits:
          - id: 'https://api.dev.nva.aws.unit.no/cristin/person/359084'
            type: 'Person'
            identifiers:
              - type: 'CristinIdentifier'
                value: '359084'
              - type: 'ORCID'
                value: '1234-1234-1234-1234'
            names:
              - type: 'PreferredFirstName'
                value: 'Ola'
              - type: 'PreferredLastName'
                value: 'Nordmann'
              - type: 'FirstName'
                value: 'Kjell Ola'
              - type: 'LastName'
                value: 'Nordmann'
            contactDetails:
              telephone: '+4799885566'
            image: 'https://api.cristin.no/v2/persons/359084/picture'
            affiliations:
              - type: 'Affiliation'
                organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/185.11.0.0'
                active: true
                role:
                  type: 'Role'
                  labels:
                    en: 'Researcher'
                    nb: 'Forsker'
                    nn: 'Forskar'
              - type: 'Affiliation'
                organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/185.90.0.0'
                active: true
                role:
                  type: 'Role'
                  labels:
                    en: 'Head Engineer'
                    nb: 'Overingeniør'
          - id: 'https://api.dev.nva.aws.unit.no/cristin/person/567987'
            type: 'Person'
            identifiers:
              - type: 'CristinIdentifier'
                value: '567987'
            names:
              - type: 'FirstName'
                value: 'Kjetil'
              - type: 'LastName'
                value: 'Nordmann'
            contactDetails:
              telephone: '+4744335566'
            affiliations:
              - type: 'Affiliation'
                organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/185.90.0.0'
                active: true
                role:
                  type: 'Role'
                  labels:
                    en: 'Consultant'
    PersonExample:
      value:
        '@context': 'https://example.org/person-context.json'
        id: 'https://api.dev.nva.aws.unit.no/cristin/person/359084'
        type: 'Person'
        identifiers:
          - type: 'CristinIdentifier'
            value: '359084'
          - type: 'ORCID'
            value: '1234-1234-1234-1234'
          - type: 'NationalIdentificationNumber'
            value: '12345612345'
        names:
          - type: 'PreferredFirstName'
            value: 'Ola'
          - type: 'PreferredLastName'
            value: 'Nordmann'
          - type: 'FirstName'
            value: 'Kjell Ola'
          - type: 'LastName'
            value: 'Nordmann'
        contactDetails:
          telephone: '+4799885566'
        image: 'https://api.cristin.no/v2/persons/359084/picture'
        affiliations:
          - type: 'Affiliation'
            organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/185.11.0.0'
            active: true
            role:
              type: 'Role'
              labels:
                en: 'Researcher'
                nb: 'Forsker'
                nn: 'Forskar'
          - type: 'Affiliation'
            organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/185.90.0.0'
            active: true
            role:
              type: 'Role'
              labels:
                en: 'Head Engineer'
                nb: 'Overingeniør'
        employments:
          - type: 'https://api.dev.nva.aws.unit.no/cristin/position#1087'
            organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0'
            startDate: '2008-01-01T00:00:00Z'
            endDate: '2019-12-31T00:00:00Z'
            fullTimeEquivalentPercentage: 100.0
    PersonPatchExample:
      value:
        orcid: '1234-1234-1234-1234'
        firstName: 'Kjell'
        lastName: 'Hansen'
        preferredFirstName: 'null'
        employments:
          - type: 'https://api.dev.nva.aws.unit.no/cristin/position#1087'
            organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0'
            startDate: '2008-01-01T00:00:00Z'
            endDate: '2019-12-31T00:00:00Z'
            fullTimeEquivalentPercentage: 100.0
    PersonPostExample:
      value:
        identifiers:
          - type: 'NationalIdentificationNumber'
            value: '12345612345'
        names:
          - type: 'PreferredFirstName'
            value: 'Ola'
          - type: 'PreferredLastName'
            value: 'Nordmann'
          - type: 'FirstName'
            value: 'Kjell Ola'
          - type: 'LastName'
            value: 'Nordmann'
        employments:
          - type: 'https://api.dev.nva.aws.unit.no/cristin/position#1087'
            organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0'
            startDate: '2008-01-01T00:00:00Z'
            endDate: '2019-12-31T00:00:00Z'
            fullTimeEquivalentPercentage: 100.0
    PersonPostResponseExample:
      value:
        '@context': 'https://example.org/person-context.json'
        id: 'https://api.dev.nva.aws.unit.no/cristin/person/359084'
        type: 'Person'
        identifiers:
          - type: 'CristinIdentifier'
            value: '359084'
        names:
          - type: 'PreferredFirstName'
            value: 'Ola'
          - type: 'PreferredLastName'
            value: 'Nordmann'
          - type: 'FirstName'
            value: 'Kjell Ola'
          - type: 'LastName'
            value: 'Nordmann'
        affiliations:
          - type: 'Affiliation'
            organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0'
            active: true
            role:
              id: 'https://example.org/link/to/ontology#1087'
              type: 'Role'
              labels:
                en: 'Head Engineer'
                nb: 'Overingeniør'
        employments:
          - type: 'https://api.dev.nva.aws.unit.no/cristin/position#1087'
            organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0'
            startDate: '2008-01-01T00:00:00Z'
            endDate: '2019-12-31T00:00:00Z'
            fullTimeEquivalentPercentage: 100.0
    PersonOrganizationInfoExample:
      value:
        '@context': 'https://ontology.org'
        id: 'https://api.dev.nva.aws.unit.no/cristin/person/359084/organization/185'
        email: 'email@example.com'
        phone: '+4799112233'
    PersonNinExample:
      value:
        type: 'NationalIdentificationNumber'
        value: '17101602885'
    PersonInstInfoPatchExample:
      value:
        phone: '+4799112233'
        email: 'mail@example.com'
    PositionCodesSample:
      value:
        "@context": "https://bibsysdev.github.io/src/position-context.json"
        positions:
          - id: "https://api.{env.}nva.aws.unit.no/positions#9308"
            name:
              nb: Overstyrmann
            enabled: false
          - id: "https://api.{env.}nva.aws.unit.no/positions#VITRÅDGIVER"
            name:
              en: Academic adviser
            enabled: true
    FundingSourcesSample:
      value:
        type: "FundingSources"
        "@context": "https://bibsysdev.github.io/src/funding-source.json"
        id: "https://api.{env.}nva.aws.unit.no/funding-sources"
        sources:
          - type: "FundingSource"
            id: "https://api.{env.}nva.aws.unit.no/funding-sources/EC%2FFP7"
            identifier: "EC/FP7"
            name:
              nb: "EC/FP7"
              nn: "EC/FP7"
              en: "EC/FP7"
          - type: "FundingSource"
            id: "https://api.{env.}nva.aws.unit.no/funding-sources/EC%2FH2020"
            identifier: "EC/H2020"
            name:
              nb: "EC/H2020"
              nn: "EC/H2020"
              en: "EC/H2020"
    FundingSourceNewSample:
      value:
        type: "FundingSource"
        id: "https://api.{env.}nva.aws.unit.no/funding-sources/EC%2FFP7"
        identifier: "EC/FP7"
        name:
          nb: "EC/FP7"
          nn: "EC/FP7"
          en: "EC/FP7"
    PersonEmploymentQueryExample:
      value:
        '@context': 'https://example.org/person-employment-search-context.json'
        id: 'https://api.dev.nva.aws.unit.no/cristin/person/123456/employment'
        size: 2
        processingTime: 800
        firstRecord: 'null'
        nextResults: 'null'
        previousResults: 'null'
        hits:
          - id: 'https://api.dev.nva.aws.unit.no/cristin/person/123456/employment/1016'
            type: 'https://api.dev.nva.aws.unit.no/cristin/position#1087'
            organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0'
            startDate: '2008-01-01T00:00:00Z'
            fullTimeEquivalentPercentage: 100.0
          - id: 'https://api.dev.nva.aws.unit.no/cristin/person/123456/employment/1014'
            type: 'https://api.dev.nva.aws.unit.no/cristin/position#1087'
            organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/185.39.55.20'
            startDate: '2017-12-01T00:00:00Z'
            endDate: '2019-12-31T00:00:00Z'
    PersonEmploymentExample:
      value:
        id: 'https://api.dev.nva.aws.unit.no/cristin/person/123456/employment/1016'
        type: 'https://api.dev.nva.aws.unit.no/cristin/position#1087'
        organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0'
        startDate: '2008-01-01T00:00:00Z'
        endDate: '2019-12-31T00:00:00Z'
        fullTimeEquivalentPercentage: 100.0

    OrganizationPersonsExample:
      value:
        '@context': 'https://example.org/person-search-context.json'
        id: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0/persons?page=1&results=5'
        size: 150
        processingTime: 800
        firstRecord: 1
        nextResults: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0/persons?page=2&results=5'
        previousResults: ''
        hits:
          - id: 'https://api.dev.nva.aws.unit.no/cristin/person/359084'
            type: 'Person'
            identifiers:
              - type: 'CristinIdentifier'
                value: '359084'
              - type: 'ORCID'
                value: '1234-1234-1234-1234'
            names:
              - type: 'PreferredFirstName'
                value: 'Ola'
              - type: 'PreferredLastName'
                value: 'Nordmann'
              - type: 'FirstName'
                value: 'Kjell Ola'
              - type: 'LastName'
                value: 'Nordmann'
            contactDetails:
              telephone: '+4799885566'
            image: 'https://api.cristin.no/v2/persons/359084/picture'
            affiliations:
              - type: 'Affiliation'
                organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0'
                active: true
                role:
                  type: 'Role'
                  labels:
                    en: 'Researcher'
                    nb: 'Forsker'
                    nn: 'Forskar'
              - type: 'Affiliation'
                organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0'
                active: true
                role:
                  type: 'Role'
                  labels:
                    en: 'Head Engineer'
                    nb: 'Overingeniør'
          - id: 'https://api.dev.nva.aws.unit.no/cristin/person/567987'
            type: 'Person'
            identifiers:
              - type: 'CristinIdentifier'
                value: '567987'
            names:
              - type: 'FirstName'
                value: 'Kjetil'
              - type: 'LastName'
                value: 'Nordmann'
            contactDetails:
              telephone: '+4744335566'
            affiliations:
              - type: 'Affiliation'
                organization: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0'
                active: true
                role:
                  type: 'Role'
                  labels:
                    en: 'Consultant'
    OrganizationProjectsExample:
      value:
        '@context': 'https://example.org/person-search-context.json'
        id: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0/projects?page=1&results=5'
        size: 150
        processingTime: 800
        firstRecord: 1
        nextResults: 'https://api.dev.nva.aws.unit.no/cristin/organization/20202.0.0.0/projects?page=2&results=5'
        previousResults: ''
        hits:
          - id: 'https://api.dev.nva.aws.unit.no/cristin/person/359084'
            type: 'Project'
            identifiers:
              - type: 'CristinIdentifier'
                value: '359084'
            title: 'Example Title'
            language: 'http://lexvo.org/id/iso639-3/nno'
            alternativeTitles:
              - 'nb': 'Eksempel på tittel'
            startDate: '2012-01-09T00:00:00Z'
            endDate: '2017-12-31T00:00:00Z'
            funding:
              - type: 'Funding'
                source:
                  type: "FundingSource"
                  names:
                    nb: "Egen institusjon"
                  code: "EI"
                code: "134455"
            coordinatingInstitution:
              id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
              type: 'Organization'
              name:
                'nb': 'OsloMet - storbyuniversitetet'
            contributors:
              - type: 'ProjectManager'
                identity:
                  id: 'https://api.dev.nva.aws.unit.no/cristin/person/325953'
                  type: 'Person'
                  firstName: 'Ola'
                  lastName: 'Nordmann'
                affiliation:
                  id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
                  type: 'Organization'
                  name:
                    'nb': 'OsloMet - storbyuniversitetet'
              - type: 'ProjectParticipant'
                identity:
                  id: 'https://api.dev.nva.aws.unit.no/cristin/person/326035'
                  type: 'Person'
                  firstName: 'Kari'
                  lastName: 'Olsen'
                affiliation:
                  id: 'https://api.dev.nva.aws.unit.no/cristin/organization/215.0.0.0'
                  type: 'Organization'
                  name:
                    'nb': 'OsloMet - storbyuniversitetet'
            status: CONCLUDED
            academicSummary:
              en: "Summary in an academic manner"
            popularScientificSummary:
              en: "popularScientificSummary popularScientificSummary popularScientificSummary"
            created:
              sourceShortName: "REK"
              date: "2019-12-31T09:45:17Z"
            lastModified:
              date: "2020-12-31T09:45:17Z"
            contactInfo:
              type: 'ContactInfo'
              contactPerson: 'Helge Testesen'
              organization: 'Agricultural University of Iceland'
              email: 'helge@test.no'
              phone: '44223355'
            fundingAmount:
              type: 'FundingAmount'
              currency: 'NOK'
              value: 5660000.0
            method:
              no: "Dette er metoden"
            equipment:
              no: "Dette er utstyret"
            projectCategories:
              - type: 'APPLIEDRESEARCH'
                label:
                  'en': 'Applied Research'
            keywords:
              - type: '4837'
                label:
                  'en': 'Supply Chain'
            externalSources:
              - type: 'ExternalSource'
                identifier: '2016/2000'
                name: 'REK'
            relatedProjects:
              - 'https://api.dev.nva.aws.unit.no/cristin/project/483302'

  securitySchemes:
    CognitoUserPool:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        type: cognito_user_pools
        providerARNs:
          - Ref:
              CognitoAuthorizerArn
